@page "/todo"

<div id="wrapper">
    <h3>ToDo</h3>

    <div id="taskList" >

        <EditForm Model="task" class="input-group" OnValidSubmit="AddTask">
            <input class="form-control" @bind-value="task.name" />
            <button class="btn btn-primary">Save</button>
        </EditForm>

        <ul class="list-group my-3">
            @foreach (TaskModel taskItem in taskList)
            {
                if (!taskItem.isCompleted)
                {
                    <li class="list-group-item list-group-item custom-list-item" @onmouseover="(() => taskItem.mouseOver = true)" @onmouseout="(() => taskItem.mouseOver = false)">
                        <div class="row">
                            <div class="col" style="float: left" @onclick="(()=> taskItem.isCompleted = !taskItem.isCompleted)">@taskItem.name</div>
                            @if (taskItem.mouseOver)
                            {
                                <div class="col oi oi-pencil" style="color: darkgray; text-align: right;" @onclick="(() => EditTask())"></div>
                            }
                            else
                            {
                                <div class="col oi oi-pencil" style="color: transparent; text-align: right;"></div>
                            }

                        </div>
                    </li>
                }
                else
                {
                    <li class="list-group-item list-group-item-secondary" @onclick="(()=> taskItem.isCompleted = !taskItem.isCompleted)"><del>@taskItem.name</del></li>
                }

            }
        </ul>
    </div>

    <div id="@dimmWindow"></div>

    <div id="@flyoutState"></div>

</div>

@code {
    private string flyoutState => colapseFlyout ? null : "flyout";
    private string dimmWindow => colapseFlyout ? null : "overlay";

    bool colapseFlyout = true;

    private bool mouseOver = false;
    TaskModel task = new TaskModel();
    private float test = 0;

    protected List<TaskModel> taskList = new List<TaskModel>();

    void AddTask()
    {
        if (!string.IsNullOrEmpty(task.name))
        {
            taskList.Add(task);
            task = new TaskModel();
            test = 300;
        }
    }

    void EditTask()
    {
        colapseFlyout = false;
    }
}
